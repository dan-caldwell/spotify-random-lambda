service: spotify-random-lambda
frameworkVersion: '2'
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  timeout: 900
  memorySize: 2048
  region: 'us-east-1'
  environment:
    SPOTIFY_CLIENT_ID: ${env:SPOTIFY_CLIENT_ID}
    SPOTIFY_SECRET: ${env:SPOTIFY_SECRET}
    SPOTIFY_PLAYLIST_ID_GLOBAL: ${env:SPOTIFY_PLAYLIST_ID_GLOBAL}
    SPOTIFY_PLAYLIST_ID_WESTERN: ${env:SPOTIFY_PLAYLIST_ID_WESTERN}
    SPOTIFY_PLAYLIST_ID_BACKGROUND: ${env:SPOTIFY_PLAYLIST_ID_BACKGROUND}
    SPOTIFY_REFRESH_TOKEN: ${env:SPOTIFY_REFRESH_TOKEN}
    DAILY_BG_TABLE: ${env:DAILY_BG_TABLE}
    META_TABLE: ${env:META_TABLE}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DAILY_BG_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.META_TABLE}"

plugins:
  - serverless-esbuild

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    target: node14
    platform: node
    concurrency: 10

resources:
  Resources:
    SpotifyDailyBackground:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.DAILY_BG_TABLE}
    MetadataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.META_TABLE}

functions:
  background:
    handler: handler.background
    events:
      - schedule: rate(1 day)